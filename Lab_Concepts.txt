Binary search is faster than linear search only if testing multiple times.
Short time: linear seartch is faster than binary search

Bucketsort
  Insertion is faster than other sorting algorithms when there are <15 items in the bucket

Hash Table
  with chaining
      m number of slots, n # of elements in the table
        a= n/m 
        Insert
            O(1)
        Delete
            O(1+a)
        Selete
            O(n)
    Visual representation example for Hash Table with chaining
        [0]
        [1]   -   [a]   -   [c]
        [2]
        [3]   -   [b]   -   [e]
        [4]   -   [d]
        [5]
  Open Addressing (OA)
        one hash table
            all items stored in one table
              Efficency decrease if the probing occurs every times
                    Probing / Insert
                          move to next item until it reaches the empty space
        [0] - []
        [1] - []
        [2] - []
        [3] - []
        [4] - []
        [5] - []


Open Addressing vs.  Chaining

Open  Addressing:  
      better  cache  performance  (better  memory  usage,  no  pointers  needed)
Chaining: 
      less sensitive to hash functions (OA requires extra care to avoid clustering) and the load factor Î±
      (OA degrades past 70% or so and in any event cannot support values larger than 1)
 
reference for Open Addressing vs. Chaining
https://courses.csail.mit.edu/6.006/fall11/lectures/lecture10.pdf
